---
import { getCollection } from "astro:content";
import Layout from "../layouts/Layout.astro";

const posts = (await getCollection("posts", ({ data }) => !data.draft)).sort(
  (a, b) =>
    new Date(b.data.pubDate).valueOf() -
    new Date(a.data.pubDate).valueOf(),
);

const formatter = new Intl.DateTimeFormat("pt-BR", {
  day: "2-digit",
  month: "long",
  year: "numeric",
});

const base = import.meta.env.BASE_URL ?? "/";
const withTrailingSlash = base.endsWith("/") ? base : `${base}/`;

const getCategory = (tags: string[]) =>
  tags.length > 0 ? tags[0].toUpperCase() : "GERAL";
---

<Layout
  title="Monquero Blog"
  description="Estudos, bastidores de projetos e anotacoes de tecnologia."
>
  <section class="blog-hero">
    <header>
      <p class="blog-kicker">Notas & aprendizados</p>
      <h1>Ultimos posts</h1>
      <p class="blog-subtitle">
        Textos escritos em Markdown, publicados automaticamente e com busca
        instantanea.
      </p>
    </header>

    <div class="blog-filters">
      <button type="button" class="filter-button" aria-pressed="true">
        Todas as categorias
        <span aria-hidden="true">▾</span>
      </button>
      <button type="button" class="filter-button">
        Todos os meses
        <span aria-hidden="true">▾</span>
      </button>
    </div>
  </section>

  <section class="cards-grid">
    {posts.map((post) => {
      const cover = post.data.heroImage;
      const category = getCategory(post.data.tags);

      return (
        <article class="post-card">
          <a href={`${withTrailingSlash}${post.slug}/`}>
            <div class="post-card__image">
              {cover ? (
                <img
                  src={cover}
                  alt={`Imagem do post ${post.data.title}`}
                  loading="lazy"
                />
              ) : (
                <div class="post-card__placeholder" aria-hidden="true">
                  <span>{category}</span>
                </div>
              )}
            </div>

            <div class="post-card__body">
              <span class="post-card__category">{category}</span>
              <h3>{post.data.title}</h3>
              <p>{post.data.description}</p>

              <div class="post-card__meta">
                <time datetime={post.data.pubDate.toISOString()}>
                  {formatter.format(post.data.pubDate)}
                </time>
                <span class="post-card__cta">Ler mais</span>
              </div>
            </div>
          </a>
        </article>
      );
    })}
  </section>
</Layout>

<style>
  .blog-hero {
    display: flex;
    flex-direction: column;
    gap: clamp(2rem, 4vw, 3.2rem);
    padding: 0 1rem;
    margin-bottom: clamp(3rem, 5vw, 4.2rem);
  }

  .blog-hero header {
    display: flex;
    flex-direction: column;
    gap: 0.9rem;
  }

  .blog-kicker {
    margin: 0;
    font-size: 1.3rem;
    text-transform: uppercase;
    letter-spacing: 0.4rem;
    color: rgba(0, 255, 238, 0.7);
    font-weight: 600;
  }

  .blog-hero h1 {
    margin: 0;
    font-size: clamp(3.4rem, 4vw, 4.2rem);
    color: var(--text-color);
    text-shadow: 0 0 25px rgba(0, 255, 238, 0.2);
  }

  .blog-subtitle {
    margin: 0;
    max-width: 620px;
    font-size: 1.6rem;
    line-height: 1.7;
    color: var(--muted-text);
  }

  .blog-filters {
    display: flex;
    flex-wrap: wrap;
    gap: 1.2rem;
  }

  .filter-button {
    display: flex;
    align-items: center;
    gap: 0.6rem;
    padding: 1.2rem 1.8rem;
    border-radius: 999px;
    border: 1px solid rgba(0, 255, 238, 0.3);
    background: rgba(8, 8, 18, 0.6);
    color: var(--text-color);
    font-weight: 600;
    font-size: 1.35rem;
    letter-spacing: 0.03em;
    cursor: pointer;
    transition: border-color 0.2s ease, background 0.2s ease;
  }

  .filter-button[aria-pressed="true"],
  .filter-button:hover {
    border-color: rgba(0, 255, 238, 0.6);
    background: rgba(0, 255, 238, 0.15);
  }

  .cards-grid {
    display: grid;
    gap: clamp(2rem, 3vw, 3.2rem);
    grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
  }

  .post-card {
    border-radius: 28px;
    border: 1px solid rgba(0, 255, 238, 0.12);
    overflow: hidden;
    background: rgba(12, 12, 24, 0.85);
    box-shadow: 0 28px 60px rgba(0, 0, 0, 0.35);
    transition: transform 0.2s ease, box-shadow 0.2s ease,
      border-color 0.2s ease;
  }

  .post-card:hover {
    transform: translateY(-6px);
    border-color: rgba(0, 255, 238, 0.35);
    box-shadow: 0 34px 70px rgba(0, 255, 238, 0.18);
  }

  .post-card a {
    color: inherit;
    display: grid;
    grid-template-rows: auto 1fr;
    text-decoration: none;
  }

  .post-card__image {
    position: relative;
    aspect-ratio: 16 / 9;
    background: rgba(15, 23, 42, 0.9);
    overflow: hidden;
  }

  .post-card__image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
    filter: saturate(1.1);
    transition: transform 0.3s ease;
  }

  .post-card:hover .post-card__image img {
    transform: scale(1.03);
  }

  .post-card__placeholder {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    background: radial-gradient(
        circle at 20% 20%,
        rgba(0, 255, 238, 0.35),
        transparent 55%
      ),
      radial-gradient(
        circle at 80% 0%,
        rgba(0, 255, 238, 0.25),
        transparent 60%
      ),
      rgba(8, 8, 24, 0.9);
  }

  .post-card__placeholder span {
    font-size: 1.5rem;
    font-weight: 700;
    letter-spacing: 0.08em;
    color: rgba(0, 255, 238, 0.75);
  }

  .post-card__body {
    display: grid;
    gap: 1.2rem;
    padding: clamp(2.2rem, 2.4vw, 2.8rem);
  }

  .post-card__category {
    display: inline-block;
    padding: 0.4rem 1.2rem;
    border-radius: 999px;
    background: rgba(0, 255, 238, 0.12);
    color: var(--main-color);
    font-size: 1.1rem;
    letter-spacing: 0.04em;
    font-weight: 600;
  }

  .post-card__body h3 {
    margin: 0;
    font-size: clamp(2rem, 2.8vw, 2.4rem);
    line-height: 1.25;
  }

  .post-card__body p {
    margin: 0;
    color: rgba(226, 232, 240, 0.88);
    line-height: 1.7;
    font-size: 1.45rem;
  }

  .post-card__meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: 0.4rem;
    font-size: 1.25rem;
    color: var(--muted-text);
  }

  .post-card__cta {
    color: var(--main-color);
    font-weight: 600;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
  }

  .post-card:hover .post-card__cta {
    transform: translateX(3px);
  }

  @media (max-width: 720px) {
    .cards-grid {
      grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));
    }
  }
</style>
